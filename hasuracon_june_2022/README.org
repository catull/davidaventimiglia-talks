#+TITLE: Securing your GraphQL API with Hasura
#+SUBTITLE: [[https://hasura.io/events/hasura-con-2022/][HasuraCon 2022]]
#+AUTHOR: David A. Ventimiglia
#+EMAIL: davidaventimiglia@hasura.io

#+options: timestamp:nil title:t toc:nil todo:t |:t num:nil author:nil

#+REVEAL_DEFAULT_SLIDE_BACKGROUND: ./assets/slide_background.png
#+REVEAL_INIT_OPTIONS: transition:'none', controlsLayout:'edges', progress:false, controlsTutorial:false
#+REVEAL_THEME: black
#+REVEAL_TITLE_SLIDE_BACKGROUND: ./assets/slide_background.png

* 
#+CAPTION: https://tinyurl.com/43vxsdmj
#+ATTR_HTML: :width 50%
#+ATTR_HTML: :height 50%
[[file:assets/qr.png]]

* Introduction

*** Program

- [[https://hasura.io/docs/latest/graphql/cloud/security/api-limits/][Hasura API Limits]]
- [[https://hasura.io/docs/latest/graphql/core/auth/authorization/permission-rules/][Hasura Permissions]]
- [[https://hasura.io/docs/latest/graphql/cloud/security/allow-lists/][Hasura Allow Lists]]
- [[https://hasura.io/docs/latest/graphql/core/api-reference/restified/][Hasura REST Endpoints]]

#+begin_NOTES
This is a note
#+end_NOTES

*** Principles

- Risk Management :: /Life is about trade-offs./
- Goal Setting :: /Confidentiality, Integrity, Availability/
- Defense in Depth :: /Bottom-Up/
- Simplicity :: /Complexity is the Enemy of Security/
- Least Privilege :: /The most secure API does nothing at all./

*** Threats

#+REVEAL_HTML: <div class="column" style="float:left; width:75%">

- Deep Queries :: /Confidentiality, Availability/
- Recursive Queries :: /Availability/
- Unbounded Queries :: /Confidentiality, Availability/
- Batch Requests :: /Confidentiality, Availability/

#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class="column" style="float:right; width:25%;">

[[file:assets/GraphQL Logo (Rhodamine).svg]]

#+REVEAL_HTML: </div>

*** Application

- [[https://hasura.io/docs/latest/graphql/core/deployment/postgres-requirements/][+Secure the DB+]]
- [[https://hasura.io/docs/latest/graphql/core/deployment/securing-graphql-endpoint/][Secure the Service]]
- [[https://hasura.io/docs/latest/graphql/core/auth/authentication/index/][+Add Authentication+]]
- [[https://hasura.io/docs/latest/graphql/core/deployment/graphql-engine-flags/reference/][+Disable Hasura Console+]]
- [[https://hasura.io/docs/latest/graphql/cloud/security/disable-graphql-introspection/][Disable Schema Introspection]]
- [[https://hasura.io/docs/latest/graphql/cloud/security/api-limits/][Set API Limits]]
- [[https://hasura.io/docs/latest/graphql/core/auth/authorization/permission-rules/][Apply Permissions]]
- [[https://hasura.io/docs/latest/graphql/core/deployment/allow-list/][Use Allow Lists]]
- [[https://hasura.io/docs/latest/graphql/core/api-reference/restified/][Create REST Endpoints]]

* Workshop

*** Log into Heroku

#+ATTR_HTML: :width 40%
#+ATTR_HTML: :height 40%
[[file:assets/log_into_heroku.png]]

*** Log into Hasura Cloud

#+ATTR_HTML: :width 40%
#+ATTR_HTML: :height 40%
[[file:assets/log_into_hasura_cloud.png]]

*** Create a new Hasura Cloud Project

#+ATTR_HTML: :width 40%
#+ATTR_HTML: :height 40%
[[file:assets/create_new_hasura_project.png]]

*** Create a new Heroku database

*** +Connect to the database+

#+begin_src shell :export both
  psql -h <hostname> -p <port> -d <db> -U <username> psql
  heroku psql -a <app>
#+end_src

*** +Secure the DB+

- Create a dedicated DB user for PROD.
- ~REVOKE~ DML (maybe).
- ~REVOKE~ DDL (definitely).
- Use a [[https://hasura.io/docs/latest/graphql/core/getting-started/docker-simple/][separate dev instance]] with elevated permissions for data modeling.
- Use an env var like ~PG_DATABASE_URL~ with your Hasuras.

#+REVEAL: split

 #+begin_src sql
   -- Read-only? (not on Heroku hobby tier!)
   CREATE USER hasuraprod WITH PASSWORD 'hasuraprod';
   GRANT CONNECT ON DATABASE <db> TO hasuraprod;
   GRANT USAGE ON SCHEMA <schema> TO hasuraprod;
   GRANT SELECT ON ALL TABLES IN SCHEMA <schema> TO hasuraprod;
   GRANT EXECUTE ON ALL FUNCTIONS IN SCHEMA <schema> TO hasuraprod;
 #+end_src

*** Secure the Service

- ~HASURA_GRAPHQL_ADMIN_SECRET~

*** +Add Authentication+

- ~HASURA_GRAPHQL_AUTH_HOOK~
- ~HASURA_GRAPHQL_AUTH_HOOK_MODE~

*** +Disable Hasura Console+

- ~HASURA_GRAPHQL_ENABLE_CONSOLE~

*** Disable Schema Introspection

#+ATTR_HTML: :width 80%
#+ATTR_HTML: :height 80%
[[file:assets/disable_schema_introspection.png]]

*** Create a Se curable Data Model

*** Set API Limits

#+ATTR_HTML: :width 80%
#+ATTR_HTML: :height 80%
[[file:assets/set_api_limits.png]]

*** Apply Permissions

*** Use Allow Lists

*** Create REST Endpoints

* Discussion

*** GraphQL Security Orthodoxy

AKA: rituals, cargo cults, security theater which you can get anywhere
- Disable Console Access
- Disable Schema Introspection
- Disable Query Suggestions (unnecessary in Hasura)
- Impose API Limits
- Whitelist Operations

*** GraphQL Security Heterodoxy

AKA: possibly controversial opinions which you will get from me
- Don't confuse public vs private:
- If you don't /need/ to provide a public API, then don't.
- If you're not providing a public API, then don't act like you are.
- Don't disable console access
- If you applied the security principles carefully, deliberately, thoughtfully, then the console can't do anything unauthorized anyway.
- Don't disable schema introspection and query suggestions.
- The public will need to know how to use your public API (which you almost certainly shouldn't have anyway)
- The public shouldn't have access to your private API (you did secure your API, add authentication, disable unauthorized access, build a rich data model, and apply fine-grained authorization, didn't you?)
- The information will get out anyway.
- Don't use GraphQL security
- Or at least, don't rely on it.
- Work diligently from the bottom-up, applying the principles carefully, deliberately, thoughtfully, and you (almost) won't need it.
- Remember "managing risk", "cargo cults", and "security theater".
Life is about trade-offs.
- Don't use GraphQL
- For private APIs, that is.
- Use Allow Lists.
- And if you're using Allow Lists, you might as well use REST endpoints.
- GraphQL is for /people/ (i.e. developers), not for machines.

* Closing Remarks

*** References

*** How and where to get help

white_check_mark
100
raised_hands

#  LocalWords:  toc controlsLayout controlsTutorial ATTR hasuraprod
