/** Generated by the default template from graphql-java-generator */
package com.graphqljava.tutorial.retail.controller;

import java.util.List;
import java.util.UUID;

import com.graphqljava.tutorial.retail.service.AccountService;
import org.springframework.graphql.data.method.annotation.Argument;
import org.springframework.graphql.data.method.annotation.MutationMapping;
import org.springframework.graphql.data.method.annotation.QueryMapping;
import org.springframework.stereotype.Controller;

import com.graphqljava.tutorial.retail.model.Account;

@Controller
public class AccountController {

	private final AccountService accountService;
	private final InputConverter inputConverter;

    public AccountController(final AccountService accountService, final InputConverter inputConverter) {
        this.accountService = accountService;
        this.inputConverter = inputConverter;
    }

	@QueryMapping(name = "accountById")
	public Account getAccountById(final @Argument UUID id) {
		return this.accountService.getAccountById(id);
	}

	@QueryMapping(name = "allAccounts")
	public List<Account> getAccounts() {
		return this.accountService.getAllAccounts();
	}

	@QueryMapping(name = "allAccountsWithLimit")
	public List<Account> getAllAccountsWithLimit(final @Argument int limit) {
		return this.accountService.getAllAccountsLimitedTo(limit);
	}

	@MutationMapping(name = "createAccount")
	public Account createAccount(final @Argument AccountInput accountInput) {
		Account account = this.inputConverter.convert(accountInput);

		return this.accountService.createAccount(account);
	}

	@MutationMapping(name = "deleteAccountById")
	public Account deleteAccountById(final @Argument UUID id) {
		this.accountService.deleteAccountById(id);

		return null;
	}

}
