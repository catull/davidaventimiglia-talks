#+GIST_ID: 8cecc640eef01dee8d6d4b140b6a70ca
#+TITLE: Relational Databases
#+SUBTITLE: Principles, Theory, History
#+AUTHOR: David A. Ventimiglia
#+EMAIL: davidaventimiglia@hasura.io

#+options: timestamp:nil title:t toc:nil todo:t |:t num:nil author:nil reveal_single_file:t

#+REVEAL_DEFAULT_SLIDE_BACKGROUND: ./assets/slide_background.png
#+REVEAL_INIT_OPTIONS: transition:'none', controlsLayout:'edges', progress:false, controlsTutorial:false
#+REVEAL_THEME: black
#+REVEAL_TITLE_SLIDE_BACKGROUND: ./assets/slide_background.png
#+REVEAL_PLUGINS: (highlight)

* Principles

*** Data Independence

#+begin_quote
"Activities of users at terminals and most application programs should
remain unaffected when the internal representation of data is changed
and even when some aspects of the external representation are
changed." -- E.F. Codd 1970
#+end_quote

*** Information Principle

/All/ information is represented by the same model.

*** Consistency

Data consistency is enforced not by imperative application rules but
by declarative database constraints.

* Theory

*** Relational Model

#+REVEAL_HTML: <div class="column" style="float:left; width:50%">

- relation :: (heading, body)
- heading :: {attributes}
- body :: {tuple}
- attribute :: (name, domain)
- name :: /text/

#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class="column" style="float:right; width:50%">

- domain :: /text/
- tuple :: {value} where value ∈ domain
- predicate :: {proposition}
- proposition :: =true= | =false=

#+REVEAL_HTML: </div>

*** Interrogating the Model

- relational calculus :: declarative language for performing optimizations
- relational algebra :: imperative language for performing transformations

*** Application

#+REVEAL_HTML: <div class="column" style="float:left; width:50%">

- relation :: table | view | query
- attribute :: column
- tuple :: row
- domain :: type
- proposition :: query

#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class="column" style="float:right; width:50%">

- relational algebra :: Π σ ⨝
- projection Π :: choose columns
- selection σ :: choose rows
- join ⨝ :: product of relations

#+REVEAL_HTML: </div>

*** Normalization

- UNF:  anything goes
- 1NF:  atomic columns
- 2NF:  no functional dependencies within table
- 3NF:  no functional dependencies to other tables
- 4NF, 5NF, 6NF:  refinements but don't worry

*** Demo

[[http://clotho.uom.gr/relax/calc.htm][RelaX - relational algebra calculator]]

[[https://gist.github.com/dventimihasura/2c2bca3625f268a5c61f510b3f3cb3e8][gist:2c2bca3625f268a5c61f510b3f3cb3e8]]

* Reality

*** Climbing Down the Ivory Tower

The mathematical formalism is useful for reasoning, but all database
implementations deviate from the strict mathematical model for
practical purposes.

*** Real Databases

- depart from set theory (hello duplicates)
- depart from simple relational theory (hello ~GROUP BY~ AND ~ORDER BY~)
- depart from first-order predicate logic (hello ~NULL~)
- extend the basic model (hello ~OUTER JOIN~)

*** Tables

- not much to say, except
- there are only "relations"
- parent-child, one-to-many, many-to-many are not a thing

*** Views

- not much to say, except
- they're saved queries
- /not/ an performance barrier, except
- when they do too much

*** Keys

- primary
  - simple
  - composite
  - "pseudo-keys"
  - +sequences+

*** Constraints

#+REVEAL_HTML: <div class="column" style="float:right; width:50%">
- Foreign
- Check
#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class="column" style="float:right; width:50%">
- Not-Null
- Unique
- Exclusion
#+REVEAL_HTML: </div>

*** Indexes

#+REVEAL_HTML: <div class="column" style="float:right; width:50%">
- Clustered (not really a thing in Postgres)
- Non-Clustered
- Implementation for constraints
#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class="column" style="float:right; width:50%">
- Expression Indexes
- Partial Indexes
- Covering Indexes
#+REVEAL_HTML: </div>

*** Data Dictionary

- One of the hallmarks of a RDBMS

*** Transactions

- ACID: Atomic, Consistent, Isolated, Durable
- A: all or nothing
- C: satisfies constraints
- I: visible or not
- D: true committment

*** Concurrency

*** Implementation Details

- Files or Volumes
- Pages
- Extents
- Rows
- Values
- Read performance
- Write performance
- Page splitting

* Summary

*** Key Ideas

- Mathematical Foundation
- Deductive Reasoning
- Powerful Optimizations
- Sophisticated Code Generation

* The End

* Additional Slides

* History

*** 1970: E.F. "Ted" Codd

#+REVEAL_HTML: <div class="column" style="float:left; width:50%">
[[file:assets/Edgar_Codd.jpg]]
#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class="column" style="float:right; width:50%">
[[file:assets/codd_1981.png]]
#+REVEAL_HTML: </div>

*** 1971: Generation X

#+REVEAL_HTML: <div class="column" style="float:left; width:60%">
[[file:assets/StrangerThingsDDScene-625x352.webp]]
#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class="column" style="float:right; width:40%">
- 1965-1980
- Latchkey kids
- Tech-savvy
[[file:assets/Stranger_Things_logo.png]]
#+REVEAL_HTML: </div>

*** 1976: IBM System R

#+REVEAL_HTML: <div class="column" style="float:left; width:50%">
- First relational database
- Released academic papers...
- ...but no commercial product
#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class="column" style="float:right; width:50%">
[[file:assets/ibm-sj-ad-1962.webp]]
#+REVEAL_HTML: </div>

*** 1976: INGRES

#+REVEAL_HTML: <div class="column" style="float:left; width:50%">
#+ATTR_HTML: :width 70%
#+ATTR_HTML: :height 70%
[[file:assets/CampanileMtTamalpiasSunset-original.jpg]]
#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class="column" style="float:right; width:50%">
- Based off those papers
- Berkeley research project
- Later a commercial product
#+REVEAL_HTML: </div>

*** 1977: Oracle

#+REVEAL_HTML: <div class="column" style="float:left; width:50%">
- PDP-11 UNIX
- Influence directly from Codd's 1970 paper
#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class="column" style="float:right; width:50%">
#+ATTR_HTML: :width 70%
#+ATTR_HTML: :height 70%
[[file:assets/Pdp-11-40.jpg]]
#+REVEAL_HTML: </div>

*** 1977: Apple

#+REVEAL_HTML: <div class="column" style="float:left; width:50%">
[[file:assets/Apple_II_typical_configuration_1977.png]]
#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class="column" style="float:right; width:50%">
#+ATTR_HTML: :width 70%
#+ATTR_HTML: :height 70%
- Apple II
- *BASIC*
- 6M units sold worldwide
- Sales peaked in 1983
- No RDBMS :(
#+REVEAL_HTML: </div>

*** 1978: Space Invaders

#+ATTR_HTML: :width 50%
#+ATTR_HTML: :height 50%
[[file:assets/SpaceInvaders-Gameplay.gif]]

*** 1982: Commodore

#+REVEAL_HTML: <div class="column" style="float:left; width:50%">
#+ATTR_HTML: :width 70%
#+ATTR_HTML: :height 70%
[[file:assets/Commodore64.jpg]]
#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class="column" style="float:right; width:50%">
- VIC-20
- Commodore 64
- *BASIC*
- 17M units sold worldwide
- Sales peaked in 1984
- No RDBMS :(
#+REVEAL_HTML: </div>
  
*** 1984: Sybase

- More Berkeley academics

*** 1989: Microsoft SQL Server

#+REVEAL_HTML: <div class="column" style="float:left; width:50%">
- Licensed from Sybase for IBM OS/2
- Used to grind Sybase into the ground
#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class="column" style="float:right; width:50%">
[[file:assets/bill-gates-borg.jpg]]
#+REVEAL_HTML: </div>

*** 1990: The World Wide Web

#+REVEAL_HTML: <div class="column" style="float:left; width:50%">
[[file:assets/Lynx-wikipedia.png]]
#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class="column" style="float:right; width:50%">
- Tim Berners-Lee at CERN
- First web server and graphical browser
#+REVEAL_HTML: </div>

*** 1993: Mosaic

#+ATTR_HTML: :width 60%
#+ATTR_HTML: :height 60%
[[file:assets/NCSA_Mosaic_Browser_Screenshot.png]]

*** 1994: The Year of the Web

#+REVEAL_HTML: <div class="column" style="float:left; width:50%">
- Gen-Xers were 23 years old
- were about to have too much money
- and not enough shoes
#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class="column" style="float:right; width:50%">
[[file:assets/marc_andreesen.jpg]]
#+REVEAL_HTML: </div>

*** 1995: The Dot-com Bubble

#+REVEAL_HTML: <div class="column" style="float:left; width:50%">
#+ATTR_HTML: :width 60%
#+ATTR_HTML: :height 60%
[[file:assets/Bill_Clinton.jpg]]
#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class="column" style="float:right; width:50%">
- HTML
- MySQL
- Perl is used
- But Java appears
#+REVEAL_HTML: <div class="column" style="float:right; width:50%">

*** 1996: MySQL

- MyISAM had severe limitations
- Fast but no transactions
- No relational integrity
- No triggers
- No functions

*** 2000: The NASDAQ Peaks

#+REVEAL_HTML: <div class="column" style="float:left; width:50%">
#+ATTR_HTML: :width 60%
#+ATTR_HTML: :height 60%
[[file:assets/Pets.com_sockpuppet.jpg]]
#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class="column" style="float:right; width:50%">
- the party's over
- From dog treats to the banks
- ORMs, EJBs, oh my!
#+REVEAL_HTML: </div>

*** 2004: Object-Relational Mapping is the Vietnam of our industry

- Ted Neward, architect and prolific author
- Gen-Xers were 33

*** 2004: The MapReduce Paper

- Apache Hadoop released 2006

*** 2005: CouchDB

- No SQL

*** 2005: GreenPlum

- SQL?
- MPP

*** 2007: MongoDB

- No SQL!

*** 2007: The Dynamo Paper

- No SQL!!

*** 2010: Moore's Law Ends

- Gordon Web, Intel co-founder

*** 2010: Apache Hive

- SQL on Hadoop

*** 2010: CitusDB

- SQL
- MPP

*** 2013: AWS Redshift

- SQL!
- MPP

*** 2014: Apache Spark

- Comes with SQL (more-or-less)

*** 2017: Hasura

#+ATTR_HTML: :width 40%
#+ATTR_HTML: :height 40%
[[file:assets/hasura.png]]

*** 2022: Today

- Gen-Xers are in their fifties.
- No longer calling the shots on tech
- Finally!

* Why Don't We Build Applications in the Database?

*** It's not what they tell you

- +performance+
- +not a real programming language+
- +not object-oriented+

*** It's never what they tell you

#+ATTR_HTML: :width 60%
#+ATTR_HTML: :height 60%
[[file:assets/wargames.jpg]]
